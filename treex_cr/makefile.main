SHELL=/bin/bash

LRC=1
ifeq ($(LRC),1)
LRC_FLAG=-p --jobs 50
endif

RUNS_DIR=tmp/runs

DATE := $(shell date +%Y-%m-%d_%H-%M-%S)
LAST_TRY := $(shell ls -d -t $(RUNS_DIR)/[0-9]* 2>/dev/null | head -n 1)
NEW_NUM  := $(shell perl -e '$$m=0; for(<$(RUNS_DIR)/*>){/\/(\d+)_/ and $$1 > $$m and $$m=$$1;} printf "%03d", $$m+1;')
NEW_TRY  := $(RUNS_DIR)/$(NEW_NUM)_$(DATE)


resolve-dev : DATA=$(DEV_DATA)
resolve-eval : DATA=$(EVAL_DATA)
resolve : DATA=$(DEV_DATA)
resolve-dev resolve-eval resolve :
	mkdir -p $(NEW_TRY)/resolve/treexfiles
	echo "$(D)" > $(NEW_TRY)/description
	treex $(LRC_FLAG) -L$(LANGUAGE) -Ssrc --workdir=$(NEW_TRY)/resolve/runs \
		Read::Treex from=@$(DATA) \
		Coref::RemoveLinks type=all \
		Scen::Coref language=$(LANGUAGE) modules=$(COREF_MODULES) \
		$(MAIN_COREF_BLOCK) diagnostics=1 \
		Write::Treex path=$(NEW_TRY)/resolve/treexfiles

baseline-dev : DATA=$(DEV_DATA)
baseline-eval : DATA=$(EVAL_DATA)
baseline : DATA=$(DEV_DATA)
baseline-dev baseline-eval baseline :
	mkdir -p $(NEW_TRY)/resolve/treexfiles
	echo "BASELINE: $(D)" > $(NEW_TRY)/description
	treex $(LRC_FLAG) -L$(LANGUAGE) -Ssrc --workdir=$(NEW_TRY)/resolve/runs \
		Read::Treex from=@$(DATA) \
		Coref::RemoveLinks type=all \
		$(BASELINE_SCEN) \
		Write::Treex path=$(NEW_TRY)/resolve/treexfiles
	
eval : ../../bin/conll_scorer/scorer.pl
	mkdir -p $(NEW_TRY)/eval/results.simple
	treex $(LRC_FLAG) -L$(LANGUAGE) -Sref --workdir=$(NEW_TRY)/eval/runs \
		Read::Treex from='!$(NEW_TRY)/resolve/treexfiles/*.streex' \
		Coref::SimpleEval node_types="$(ANAPH_TYPE)" path="$(NEW_TRY)/eval/results.simple"
	find $(NEW_TRY)/eval/results.simple -name '*.tsv' | sort | xargs cat > $(NEW_TRY)/eval/results.simple.tsv
	cat $(NEW_TRY)/eval/results.simple.tsv | $(MLYN_DIR)/scripts/eval.pl --acc --prf > $(NEW_TRY)/eval/eval.simple.txt
	fscore=`cat $(NEW_TRY)/eval/eval.simple.txt | sed -n '4p'`; \
	desc=`cat $(NEW_TRY)/description`; \
	echo -e "$(DATE)\t$$fscore\t$(NEW_TRY)\t$$desc" >> stats.txt


## Evaluation with the standard coreference measures as well
## TODO: Coref::PrepareSpecializedEval must be fixed
#eval : ../../bin/conll_scorer/scorer.pl
#	treex $(LRC_FLAG) -L$(LANGUAGE) -Sref --workdir=$(NEW_TRY)/eval/runs \
#		Read::Treex from='!$(NEW_TRY)/resolve/treexfiles/*.streex' \
#    	A2T::SetDocOrds \
#		Coref::PrepareSpecializedEval category=$(ANAPH_TYPE) \
#		Coref::SimpleEval path="$(NEW_TRY)/eval/results.simple" \
#		Coref::MarkMentionsForScorer layer=t \
#		Write::SemEval2010 layer=t path="$(NEW_TRY)/eval/results.semeval.key" \
#		Coref::RemoveLinks \
#		T2T::CopyCorefFromAlignment selector=src \
#		Coref::MarkMentionsForScorer layer=t \
#		Write::SemEval2010 layer=t path="$(NEW_TRY)/eval/results.semeval.response"
#	find $(NEW_TRY)/eval/results.simple -name '*.tsv' | sort | xargs cat > $(NEW_TRY)/eval/results.simple.tsv
#	find $(NEW_TRY)/eval/results.semeval.key -name '*.conll' | sort | xargs cat > $(NEW_TRY)/eval/results.semeval.key.conll
#	find $(NEW_TRY)/eval/results.semeval.response -name '*.conll' | sort | xargs cat > $(NEW_TRY)/eval/results.semeval.response.conll
#	cat $(NEW_TRY)/eval/results.simple.tsv | ../../bin/eval.pl > $(NEW_TRY)/eval/eval.simple.txt
#	$< all $(NEW_TRY)/eval/results.semeval.key.conll $(NEW_TRY)/eval/results.semeval.response.conll none > $(NEW_TRY)/eval/eval.conll.txt

pretty_print :
	../../bin/cr_pretty_print.sh $(LANGUAGE) '!$(NEW_TRY)/resolve/treexfiles/*.streex' $(NEW_TRY)/pretty_print
	
#export DESCRIPTION=`cat $(NEW_TRY)/description`; \

#    My::RemoveCoreferenceLoops

eval-% pretty_print-%:
	export new_try=`ls -d $(RUNS_DIR)/$*_*` && \
	make $(@:-$*=) NEW_NUM=$* NEW_TRY=$$new_try DATE=`echo $$new_try | cut -d_ -f2-`

../../bin/conll_scorer/scorer.pl :
	wget -O ../../bin/scorer.tar.gz http://conll.cemantix.org/download/reference-coreference-scorers.v8.01.tar.gz
	tar -C ../../bin -xvvzf ../../bin/scorer.tar.gz
	mv ../../bin/reference-coreference-scorers/v8.01/ ../../bin/conll_scorer
	rm -rf ../../bin/reference-coreference-scorers/
	rm ../../bin/scorer.tar.gz
